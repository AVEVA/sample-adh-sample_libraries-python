trigger:
  batch: true
  branches:
    include:
      - main

pr:
  branches:
    include:
      - main

schedules:
  - cron: '0 0 * * 0'
    displayName: Weekly build
    branches:
      include:
        - main
    always: true

resources:
  repositories:
    - repository: ArchitectureRepo
      type: git
      name: Architecture/Architecture
      ref: refs/heads/main
    - repository: templates
      type: github
      name: AVEVA/AVEVA-Samples
      endpoint: AVEVA

variables:
  - name: analysisProject
    value: Lib_Python

parameters:
  - name: pool
    default: DevOps-Managed-Ubt22-Mdp
  - name: containerDemands
    type: object
    default: ['Agent.OS -equals Linux']

jobs:
  - template: '/miscellaneous/build_templates/code-analysis.yml@templates'
    parameters:
      buildSteps:
        - script: |
            echo Install tools
            pip install wheel
            pip install twine
            echo Build library
            python setup.py sdist bdist_wheel
            echo Install library
            pip install .
            echo Complete
          displayName: 'Build'

  - job: Tests
    condition: ne(variables['Build.Reason'], 'Schedule')
    pool:
      name: ${{ parameters.pool }}
      demands: ${{ parameters.containerDemands }}
    steps:
      - template: '/miscellaneous/build_templates/appsettings.yml@templates'
        parameters:
          secrets: 'TenantId, NamespaceId, ClientId, ClientSecret, Resource'

      - script: |
          echo Install requirements for tests
          pip install ".[test]"
          echo Run tests
          cd ./adh_sample_library_preview/Tests
          python -m pytest --junitxml=junit/test-results-baseclient.xml test_baseclient.py --e2e True
          python -m pytest --junitxml=junit/test-results-streams.xml test_streams.py --e2e True
          echo Complete
        displayName: 'Run tests'

      - task: PublishTestResults@2
        inputs:
          testResultsFiles: '**/test-*.xml'
          failTaskOnFailedTests: true
          testRunTitle: '$(Agent.JobName) on $(Agent.OS)'
        displayName: 'Publish test results'
        condition: always()
